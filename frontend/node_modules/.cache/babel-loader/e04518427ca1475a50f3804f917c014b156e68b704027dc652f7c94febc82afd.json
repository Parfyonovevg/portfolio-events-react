{"ast":null,"code":"var _jsxFileName = \"/Users/yevheniiparfonov/Downloads/routing/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, useLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const params = useParams();\n  const data = useLoaderData();\n  const events = data.events;\n  const event = events.find(event => event.id === params.id);\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n_s(EventDetailPage, \"83bg/f50vBzyoLkuhTA99J7W+qE=\", false, function () {\n  return [useParams, useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events' }), {\n    //   status: 500,\n    // });\n\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","useLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","params","data","events","event","find","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","json","message","status","$RefreshReg$"],"sources":["/Users/yevheniiparfonov/Downloads/routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, useLoaderData } from 'react-router-dom';\n\nimport EventItem from '../components/EventItem';\n\nconst EventDetailPage = () => {\n  const params = useParams();\n  const data = useLoaderData();\n  const events = data.events;\n\n  const event = events.find((event) => event.id === params.id);\n\n  return <EventItem event={event} />;\n};\n\nexport default EventDetailPage;\n\nexport const loader = async () => {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events' }), {\n    //   status: 500,\n    // });\n\n    throw json(\n      {\n        message: 'Could not fetch events',\n      },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n};"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;AAE3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B,MAAMQ,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,MAAMC,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACE,EAAE,KAAKL,MAAM,CAACK,EAAE,CAAC;EAE5D,oBAAOR,OAAA,CAACF,SAAS;IAACQ,KAAK,EAAEA;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAACV,EAAA,CARID,eAAe;EAAA,QACJL,SAAS,EACXC,aAAa;AAAA;AAAAgB,EAAA,GAFtBZ,eAAe;AAUrB,eAAeA,eAAe;AAE9B,OAAO,MAAMa,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;;IAEA,MAAMC,IAAI,CACR;MACEC,OAAO,EAAE;IACX,CAAC,EACD;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOL,QAAQ;EACjB;AACF,CAAC;AAAC,IAAAF,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}