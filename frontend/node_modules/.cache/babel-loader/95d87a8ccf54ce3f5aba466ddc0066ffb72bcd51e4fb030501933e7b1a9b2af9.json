{"ast":null,"code":"var _jsxFileName = \"/Users/yevheniiparfonov/Downloads/routing/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  // const params = useParams();\n  const event = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n_s(EventDetailPage, \"f+CY/h38cRQOxw9KpH9VFCtzaWo=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.id;\n  const response = await fetch('http://localhost:8080/events' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","event","events","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/yevheniiparfonov/Downloads/routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useLoaderData, json } from 'react-router-dom';\n\nimport EventItem from '../components/EventItem';\n\nconst EventDetailPage = () => {\n  // const params = useParams();\n  const event = useLoaderData();\n  const events = data.events;\n\n  return <EventItem event={event} />;\n};\n\nexport default EventDetailPage;\n\nexport const loader = async ({ request, params }) => {\n  const id = params.id;\n  const response = await fetch('http://localhost:8080/events' + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: 'Could not fetch details for selected event' },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAMC,KAAK,GAAGP,aAAa,CAAC,CAAC;EAC7B,MAAMQ,MAAM,GAAGC,IAAI,CAACD,MAAM;EAE1B,oBAAOJ,OAAA,CAACF,SAAS;IAACK,KAAK,EAAEA;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAACP,EAAA,CANID,eAAe;EAAA,QAELL,aAAa;AAAA;AAAAc,EAAA,GAFvBT,eAAe;AAQrB,eAAeA,eAAe;AAE9B,OAAO,MAAMU,MAAM,GAAG,MAAAC,IAAA,IAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,EAAE,GAAGD,MAAM,CAACC,EAAE;EACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGF,EAAE,CAAC;EAEjE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMrB,IAAI,CACR;MAAEsB,OAAO,EAAE;IAA6C,CAAC,EACzD;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}